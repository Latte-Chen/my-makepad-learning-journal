makepad_draw::shader::draw_text Live DSL
"DrawText ={{dummy}}{color :#fff texture tex :texture2d varying tex_coord1 :vec2 varying tex_coord2 :vec2 varying tex_coord3 :vec2 varying clipped :vec2 varying pos :vec2 fn vertex(self) ->vec4{let min_pos =vec2(self .rect_pos .x ,self .rect_pos .y) let max_pos =vec2(self .rect_pos .x +self .rect_size .x ,self .rect_pos .y -self .rect_size .y) self .clipped =clamp(mix(min_pos ,max_pos ,self .geom_pos) ,self .draw_clip .xy ,self .draw_clip .zw) let normalized :vec2 =(self .clipped -min_pos)/vec2(self .rect_size .x ,-self .rect_size .y) self .tex_coord1 =mix(vec2(self .font_t1 .x ,1.0 -self .font_t1 .y) ,vec2(self .font_t2 .x ,1.0 -self .font_t2 .y) ,normalized .xy) self .pos =normalized ;return self .camera_projection *(self .camera_view *(self .view_transform *vec4(self .clipped .x ,self .clipped .y ,self .char_depth +self .draw_zbias ,1.)))} fn get_color(self) ->vec4{return self .color ;} fn blend_color(self ,incol :vec4) ->vec4{return incol} fn get_brightness(self) ->float{return 1.0 ;} fn sample_color(self ,scale :float ,pos :vec2) ->vec4{let brightness =self .get_brightness() ;let sdf_radius =8.0 ;let sdf_cutoff =0.25 ;let s =sample2d(self .tex ,pos) .x ;let curve =0.5 ;let texel_coords =pos .xy *4096.0 ;s =clamp((s -(1.0 -sdf_cutoff))*sdf_radius /scale +0.5 ,0.0 ,1.0) ;let col =self .get_color() ;return self .blend_color(vec4(s *col .rgb *brightness *col .a ,s *col .a)) ;} fn pixel(self) ->vec4{let texel_coords =self .tex_coord1 .xy ;let dxt =length(dFdx(texel_coords)) ;let dyt =length(dFdy(texel_coords)) ;let scale =(dxt +dyt)*4096.0 *0.5 ;return self .sample_color(scale ,self .tex_coord1 .xy) ;}}"